package db.qquser.dao;

import com.ibatis.sqlmap.client.SqlMapClient;
import db.qquser.entity.QQUserData;
import db.qquser.entity.QQUserDataExample;
import java.sql.SQLException;
import java.util.List;

public class QQUserDataDAOImpl implements QQUserDataDAO {
    /**
     * This field was generated by Abator for iBATIS.
     * This field corresponds to the database table user_qq
     *
     * @abatorgenerated Wed Oct 25 17:50:42 CST 2017
     */
    private SqlMapClient sqlMapClient;

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table user_qq
     *
     * @abatorgenerated Wed Oct 25 17:50:42 CST 2017
     */
    public QQUserDataDAOImpl(SqlMapClient sqlMapClient) {
        super();
        this.sqlMapClient = sqlMapClient;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table user_qq
     *
     * @abatorgenerated Wed Oct 25 17:50:42 CST 2017
     */
    public void insert(QQUserData record) throws SQLException {
        sqlMapClient.insert("user_qq.abatorgenerated_insert", record);
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table user_qq
     *
     * @abatorgenerated Wed Oct 25 17:50:42 CST 2017
     */
    public int updateByPrimaryKey(QQUserData record) throws SQLException {
        int rows = sqlMapClient.update("user_qq.abatorgenerated_updateByPrimaryKey", record);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table user_qq
     *
     * @abatorgenerated Wed Oct 25 17:50:42 CST 2017
     */
    public int updateByPrimaryKeySelective(QQUserData record) throws SQLException {
        int rows = sqlMapClient.update("user_qq.abatorgenerated_updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table user_qq
     *
     * @abatorgenerated Wed Oct 25 17:50:42 CST 2017
     */
    public List selectByExample(QQUserDataExample example) throws SQLException {
        List list = sqlMapClient.queryForList("user_qq.abatorgenerated_selectByExample", example);
        return list;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table user_qq
     *
     * @abatorgenerated Wed Oct 25 17:50:42 CST 2017
     */
    public QQUserData selectByPrimaryKey(String id) throws SQLException {
        QQUserData key = new QQUserData();
        key.setId(id);
        QQUserData record = (QQUserData) sqlMapClient.queryForObject("user_qq.abatorgenerated_selectByPrimaryKey", key);
        return record;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table user_qq
     *
     * @abatorgenerated Wed Oct 25 17:50:42 CST 2017
     */
    public int deleteByExample(QQUserDataExample example) throws SQLException {
        int rows = sqlMapClient.delete("user_qq.abatorgenerated_deleteByExample", example);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table user_qq
     *
     * @abatorgenerated Wed Oct 25 17:50:42 CST 2017
     */
    public int deleteByPrimaryKey(String id) throws SQLException {
        QQUserData key = new QQUserData();
        key.setId(id);
        int rows = sqlMapClient.delete("user_qq.abatorgenerated_deleteByPrimaryKey", key);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table user_qq
     *
     * @abatorgenerated Wed Oct 25 17:50:42 CST 2017
     */
    public int countByExample(QQUserDataExample example) throws SQLException {
        Integer count = (Integer)  sqlMapClient.queryForObject("user_qq.abatorgenerated_countByExample", example);
        return count.intValue();
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table user_qq
     *
     * @abatorgenerated Wed Oct 25 17:50:42 CST 2017
     */
    public int updateByExampleSelective(QQUserData record, QQUserDataExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = sqlMapClient.update("user_qq.abatorgenerated_updateByExampleSelective", parms);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table user_qq
     *
     * @abatorgenerated Wed Oct 25 17:50:42 CST 2017
     */
    public int updateByExample(QQUserData record, QQUserDataExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = sqlMapClient.update("user_qq.abatorgenerated_updateByExample", parms);
        return rows;
    }

    /**
     * This class was generated by Abator for iBATIS.
     * This class corresponds to the database table user_qq
     *
     * @abatorgenerated Wed Oct 25 17:50:42 CST 2017
     */
    private static class UpdateByExampleParms extends QQUserDataExample {
        private Object record;

        public UpdateByExampleParms(Object record, QQUserDataExample example) {
            super(example);
            this.record = record;
        }

        public Object getRecord() {
            return record;
        }
    }
}